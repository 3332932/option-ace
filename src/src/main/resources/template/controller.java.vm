package ${package.Controller};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.cn.base.utils.ResultMapUtils;
import java.util.Map;
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
#set($entityName=${entity})
#set($entityName=$entityName.substring(0,1).toLowerCase()+$entityName.substring(1,$entityName.length()))
#set($apiName=$entityName+"Api")
#set($resourceNames=$entityName+"s")
#set($insertMethod=$apiName+".save("+$entityName+")")
#set($updateMethod=$apiName+".update("+$entityName+",wrapper)")
#set($getOneMethod=$apiName+".list(wrapper)")
#set($getPageMethod=$apiName+".page(page,wrapper)")




##import org.springframework.web.bind.annotation.RequestMapping;
#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api("${table.comment} 服务")
@RequestMapping("/$entityName")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
##@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} $apiName;

    @ApiOperation("保存")
    @PostMapping
    public Map<String,Object> insert(@RequestBody ${entity} $entityName) {
        $insertMethod;
        return ResultMapUtils.getSuccessResultMap();
    }

    @ApiOperation("修改")
    @PutMapping
    public Map<String,Object> update(${entity} ${entityName}, QueryWrapper<${entity}> wrapper) {
        $updateMethod;
        return ResultMapUtils.getSuccessResultMap();
    }

    @ApiOperation("查询")
    @GetMapping
    public Map<String,Object> selectById(QueryWrapper<${entity}> wrapper) {
        return ResultMapUtils.getResultMap($getOneMethod);
    }

    @ApiOperation("分页")
    @GetMapping("/page")
    public Map<String,Object> selectPage(Page<${entity}> page,QueryWrapper<${entity}> wrapper) {
        return ResultMapUtils.getPageResult($getPageMethod);
    }
}
#end
